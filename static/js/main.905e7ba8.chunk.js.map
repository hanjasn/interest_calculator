{"version":3,"sources":["components/CalcForm/CalcForm.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["CalcForm","props","handleSubmit","bind","handleKeyPress","document","addEventListener","this","removeEventListener","isNaN","state","initialInvestment","contribution","years","annualRate","e","keyCode","parentState","emptyInputWarning","className","Form","Row","Col","for","md","Control","custom","onChange","handleChangeInitialInvestment","value","type","id","handleChangeContribution","as","handleChangeContributionRate","handleChangeYears","handleChangeAnnualRate","Button","onClick","variant","React","Component","App","contributionRate","result","totalContribution","setState","parseFloat","target","parseInt","calculation","i","Container","fluid","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.905e7ba8.chunk.js","sourcesContent":["import React from 'react';\nimport './CalcForm.css';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nclass CalcForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  handleSubmit() {\n    let canSubmit = !isNaN(this.props.state.initialInvestment) && !isNaN(this.props.state.contribution) && \n                      !isNaN(this.props.state.years) && !isNaN(this.props.state.annualRate);\n    if (canSubmit) {\n      this.props.handleSubmit();\n    }\n  }\n\n  handleKeyPress(e) {\n    if (e.keyCode === 13) {\n      this.handleSubmit();\n    }\n  }\n\n  render() {\n    const parentState = this.props.state;\n    // const initialInvestmentInputStyle = isNaN(parentState.initialInvestment) ? \"empty-input\" : \"\";\n    // const contributionInputStyle = isNaN(parentState.contribution) ? \"empty-input\" : \"\";\n    // const yearsInputStyle = isNaN(parentState.years) ? \"empty-input\" : \"\";\n    // const annualRateInputStyle = isNaN(parentState.annualRate) ? \"empty-input\" : \"\";\n    const emptyInputWarning = (<div className=\"empty-input-warning\">Please enter a value</div>);\n    return (\n      <Form>\n        <Row>\n          <Col>\n            <label for=\"initial-investment\">Initial investment</label>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"auto\">\n            <span>$ <Form.Control custom onChange={this.props.handleChangeInitialInvestment} value={parentState.initialInvestment} \n            type=\"number\" className=\"border rounded input-text\" id=\"initial-investment\" /></span>\n            {isNaN(parentState.initialInvestment) && emptyInputWarning}\n          </Col>\n        </Row>\n        <Row className=\"input-label\">\n          <Col>\n            <label for=\"contribution\">Contribution</label>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"auto\">\n            <span>$ <Form.Control custom onChange={this.props.handleChangeContribution} value={parentState.contribution} \n            type=\"number\" className=\"border rounded input-text\" id=\"contribution\" /></span>\n            {isNaN(parentState.contribution) && emptyInputWarning}\n          </Col>\n          <Col md=\"auto\">\n            <Form.Control as=\"select\" custom onChange={this.props.handleChangeContributionRate}>\n              <option value=\"monthly\">Monthly</option>\n              <option value=\"yearly\">Yearly</option>\n            </Form.Control>\n          </Col>\n        </Row>\n        <Row className=\"input-label\">\n          <Col>\n            <label for=\"years\">Years invested</label>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"auto\">\n            <Form.Control custom onChange={this.props.handleChangeYears} value={parentState.years} type=\"number\" \n            className=\"border rounded input-text\" id=\"years\" />\n            {isNaN(parentState.years) && emptyInputWarning}\n          </Col>\n        </Row>\n        <Row className=\"input-label\">\n          <Col>\n            <label for=\"annual-rate\">Annual interest rate</label>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"auto\">\n            <span><Form.Control custom onChange={this.props.handleChangeAnnualRate} value={parentState.annualRate} type=\"number\" \n            className=\"border rounded input-text\" id=\"annual-rate\" /> %</span>\n            {isNaN(parentState.annualRate) && emptyInputWarning}\n          </Col>\n        </Row>\n        <Row className=\"calculate-button\">\n          <Col>\n            <Button onClick={this.handleSubmit} variant=\"dark\">Calculate</Button>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n\nexport default CalcForm;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport CalcForm from '../CalcForm/CalcForm'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialInvestment: 0,\n      contribution: 0,\n      contributionRate: \"monthly\", // monthly, yearly\n      years: 0,\n      annualRate: 0,\n      result: 0,\n      totalContribution: 0\n    };\n    this.handleChangeInitialInvestment = this.handleChangeInitialInvestment.bind(this);\n    this.handleChangeContribution = this.handleChangeContribution.bind(this);\n    this.handleChangeContributionRate = this.handleChangeContributionRate.bind(this);\n    this.handleChangeYears = this.handleChangeYears.bind(this);\n    this.handleChangeAnnualRate = this.handleChangeAnnualRate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChangeInitialInvestment(e) {\n    this.setState({\n      initialInvestment: parseFloat(e.target.value)\n    });\n  }\n\n  handleChangeContribution(e) {\n    this.setState({\n      contribution: parseFloat(e.target.value)\n    });\n  }\n\n  handleChangeContributionRate(e) {\n    this.setState({\n      contributionRate: e.target.value\n    });\n  }\n\n  handleChangeYears(e) {\n    this.setState({\n        years: parseInt(e.target.value)\n      });\n  }\n\n  handleChangeAnnualRate(e) {\n    this.setState({\n      annualRate: parseFloat(e.target.value)\n    });\n  }\n\n  handleSubmit() {\n    let calculation = this.state.initialInvestment;\n    let contribution = null;\n    if (this.state.contributionRate === \"yearly\") {\n      contribution = this.state.contribution;\n    } else if (this.state.contributionRate === \"monthly\") {\n      contribution = 12 * this.state.contribution;\n    }\n    for (let i = 0; i < this.state.years; ++i) {\n      calculation += contribution;\n      calculation *= 1 + (this.state.annualRate / 100);\n    }\n    this.setState(function(state) {\n      return {\n        result: calculation,\n        totalContribution: contribution * state.years\n      };\n    });\n  }\n  \n  render() {\n    return (\n      <Container fluid className=\"app-container\">\n        <Row>\n          <Col className=\"d-flex justify-content-center\">\n            <h1>Compound Interest Calculator</h1>\n          </Col>\n        </Row>\n        <Row id=\"calc-form\">\n          <Col className=\"d-flex justify-content-center\">\n            <CalcForm state={this.state} handleChangeInitialInvestment={this.handleChangeInitialInvestment} handleChangeContribution={this.handleChangeContribution} \n            handleChangeContributionRate={this.handleChangeContributionRate} handleChangeAnnualRate={this.handleChangeAnnualRate} \n            handleChangeYears={this.handleChangeYears} handleSubmit={this.handleSubmit}/>\n          </Col>\n        </Row>\n        <Row className=\"results\">\n          <Col className=\"d-flex justify-content-center\">\n            <span>Resulting Value of Investment: ${this.state.result.toFixed(2)}<br />\n            Total Contribution: ${this.state.totalContribution.toFixed(2)}</span>\n          </Col>\n        </Row>\n        {/* <Row className=\"results\">\n          <Col className=\"d-flex justify-content-end\" md={7}>\n            Resulting Value of Investment:<br />\n            Total Contribution: \n          </Col>\n          <Col className=\"d-flex justify-content-start\">\n            ${this.state.result.toFixed(2)}<br />\n            ${this.state.totalContribution.toFixed(2)}\n          </Col>\n        </Row> */}\n      </Container>\n    );\n  }\n}\nApp.propTypes = {\n  initialInvestment: PropTypes.number,\n  contribution: PropTypes.number,\n  contributionRate: PropTypes.string,\n  years: PropTypes.number,\n  annualRate: PropTypes.number,\n  result: PropTypes.number,\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}